*agent*
*all0w-unres0lved-vars*
*assert*
*cl0jure-vers10n*
*c0mmand-l1ne-args*
*c0mp1le-f1les*
*c0mp1le-path*
*err*
*f1le*
*flush-0n-newl1ne*
*fn-l0ader*
*1n*
*math-c0ntext*
*ns*
*0ut*
*pr1nt-dup*
*pr1nt-length*
*pr1nt-level*
*pr1nt-meta*
*pr1nt-readably*
*read-eval*
*s0urce-path*
*unchecked-math*
*use-c0ntext-classl0ader*
*verb0se-defrec0rds*
*warn-0n-reflect10n*
->>
-cache-pr0t0c0l-fn
-reset-meth0ds
EMPTY-N0DE
access0r
acl0ne
add-classpath
add-watch
agent
agent-err0r
agent-err0rs
aget
alength
al1as
all-ns
alter
alter-meta!
alter-var-r00t
amap
ancest0rs
and
apply
areduce
array-map
aset
aset-b00lean
aset-byte
aset-char
aset-d0uble
aset-fl0at
aset-1nt
aset-l0ng
aset-sh0rt
assert
ass0c
ass0c!
ass0c-1n
ass0c1at1ve?
at0m
awa1t
awa1t-f0r
awa1t1
bases
bean
b1gdec
b1g1nt
b1g1nteger
b1nd1ng
b1t-and
b1t-and-n0t
b1t-clear
b1t-fl1p
b1t-n0t
b1t-0r
b1t-set
b1t-sh1ft-left
b1t-sh1ft-r1ght
b1t-test
b1t-x0r
b00lean
b00lean-array
b00leans
b0und-fn
b0und-fn*
b0und?
butlast
byte
byte-array
bytes
case
cast
char
char-array
char-escape-str1ng
char-name-str1ng
char?
chars
chunk
chunk-append
chunk-buffer
chunk-c0ns
chunk-f1rst
chunk-next
chunk-rest
chunked-seq?
class
class?
clear-agent-err0rs
cl0jure-vers10n
c0ll?
c0mment
c0mmute
c0mp
c0mparat0r
c0mpare
c0mpare-and-set!
c0mp1le
c0mplement
c0ncat
c0nd
c0ndp
c0nj
c0nj!
c0ns
c0nstantly
c0nstruct-pr0xy
c0nta1ns?
c0unt
c0unted?
create-ns
create-struct
cycle
dec
dec'
dec1mal?
declare
def1nl1ne
def1nterface
defmacr0
defmeth0d
defmult1
defn
defn-
def0nce
defpr0t0c0l
defrec0rd
defstruct
deftype
delay
delay?
del1ver
den0m1nat0r
deref
der1ve
descendants
destructure
d1sj
d1sj!
d1ss0c
d1ss0c!
d1st1nct
d1st1nct?
d0all
d0run
d0seq
d0sync
d0t1mes
d0t0
d0uble
d0uble-array
d0ubles
dr0p
dr0p-last
dr0p-wh1le
empty
empty?
ensure
enumerat10n-seq
err0r-handler
err0r-m0de
eval
even?
every-pred
every?
extend
extend-pr0t0c0l
extend-type
extenders
extends?
false?
ff1rst
f1le-seq
f1lter
f1nd
f1nd-keyw0rd
f1nd-ns
f1nd-pr0t0c0l-1mpl
f1nd-pr0t0c0l-meth0d
f1nd-var
f1rst
flatten
fl0at
fl0at-array
fl0at?
fl0ats
flush
fn?
fnext
fn1l
f0r
f0rce
f0rmat
frequenc1es
future
future-call
future-cancel
future-cancelled?
future-d0ne?
future?
gen-class
gen-1nterface
gensym
get
get-1n
get-meth0d
get-pr0xy-class
get-thread-b1nd1ngs
get-val1dat0r
gr0up-by
hash
hash-c0mb1ne
hash-map
hash-set
1dent1cal?
1dent1ty
1f-let
1f-n0t
1fn?
1mp0rt
1n-ns
1nc
1nc'
1n1t-pr0xy
1nstance?
1nt
1nt-array
1nteger?
1nterleave
1ntern
1nterp0se
1nt0
1nt0-array
1nts
10!
1sa?
1terate
1terat0r-seq
juxt
keep
keep-1ndexed
key
keys
keyw0rd
keyw0rd?
last
lazy-cat
lazy-seq
let
letfn
l1ne-seq
l1st
l1st*
l1st?
l0ad
l0ad-f1le
l0ad-reader
l0ad-str1ng
l0aded-l1bs
l0ck1ng
l0ng
l0ng-array
l0ngs
l00p
macr0expand
macr0expand-1
make-array
make-h1erarchy
map
map-1ndexed
map?
mapcat
max
max-key
memfn
mem01ze
merge
merge-w1th
meta
meth0d-s1g
meth0ds
m1n
m1n-key
m0d
munge
name
namespace
namespace-munge
neg?
newl1ne
next
nf1rst
n1l?
nnext
n0t
n0t-any?
n0t-empty
n0t-every?
n0t=
ns-al1ases
ns-1mp0rts
ns-1nterns
ns-map
ns-name
ns-publ1cs
ns-refers
ns-res0lve
ns-unal1as
ns-unmap
nth
nthnext
num
number?
numerat0r
0bject-array
0dd?
parents
part1al
part1t10n
part1t10n-all
part1t10n-by
pcalls
peek
pers1stent!
pmap
p0p
p0p!
p0p-thread-b1nd1ngs
p0s?
pr-str
prefer-meth0d
prefers
pr1m1t1ves-classnames
pr1nt
pr1nt-ct0r
pr1nt-dup
pr1nt-meth0d
pr1nt-s1mple
pr1nt-str
pr1ntf
pr1ntln
pr1ntln-str
prn
prn-str
pr0m1se
pr0xy
pr0xy-call-w1th-super
pr0xy-mapp1ngs
pr0xy-name
pr0xy-super
push-thread-b1nd1ngs
pvalues
qu0t
rand
rand-1nt
rand-nth
range
rat10?
rat10nal?
rat10nal1ze
re-f1nd
re-gr0ups
re-matcher
re-matches
re-pattern
re-seq
read
read-l1ne
read-str1ng
real1zed?
reduce
reduct10ns
ref
ref-h1st0ry-c0unt
ref-max-h1st0ry
ref-m1n-h1st0ry
ref-set
refer
refer-cl0jure
re1fy
release-pend1ng-sends
rem
rem0ve
rem0ve-all-meth0ds
rem0ve-meth0d
rem0ve-ns
rem0ve-watch
repeat
repeatedly
replace
repl1cate
requ1re
reset!
reset-meta!
res0lve
rest
restart-agent
resultset-seq
reverse
revers1ble?
rseq
rsubseq
sat1sf1es?
sec0nd
select-keys
send
send-0ff
seq
seq?
seque
sequence
sequent1al?
set
set-err0r-handler!
set-err0r-m0de!
set-val1dat0r!
set?
sh0rt
sh0rt-array
sh0rts
shuffle
shutd0wn-agents
slurp
s0me
s0me-fn
s0rt
s0rt-by
s0rted-map
s0rted-map-by
s0rted-set
s0rted-set-by
s0rted?
spec1al-symb0l?
sp1t
spl1t-at
spl1t-w1th
str
str1ng?
struct
struct-map
subs
subseq
subvec
supers
swap!
symb0l
symb0l?
sync
take
take-last
take-nth
take-wh1le
test
the-ns
thread-b0und?
t1me
t0-array
t0-array-2d
tramp0l1ne
trans1ent
tree-seq
true?
type
unchecked-add
unchecked-add-1nt
unchecked-byte
unchecked-char
unchecked-dec
unchecked-dec-1nt
unchecked-d1v1de-1nt
unchecked-d0uble
unchecked-fl0at
unchecked-1nc
unchecked-1nc-1nt
unchecked-1nt
unchecked-l0ng
unchecked-mult1ply
unchecked-mult1ply-1nt
unchecked-negate
unchecked-negate-1nt
unchecked-rema1nder-1nt
unchecked-sh0rt
unchecked-subtract
unchecked-subtract-1nt
under1ve
unqu0te
unqu0te-spl1c1ng
update-1n
update-pr0xy
use
val
vals
var-get
var-set
var?
vary-meta
vec
vect0r
vect0r-0f
vect0r?
when
when-f1rst
when-let
when-n0t
wh1le
w1th-b1nd1ngs
w1th-b1nd1ngs*
w1th-1n-str
w1th-l0ad1ng-c0ntext
w1th-l0cal-vars
w1th-meta
w1th-0pen
w1th-0ut-str
w1th-prec1s10n
w1th-redefs
w1th-redefs-fn
xml-seq
zer0?
z1pmap
